<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "closure #1 in LoginViewController.fbLoginAction(_:):LoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "error as! NSError">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.showUserInfo() -&gt; ():ProfileViewController.swift">
      </ContextState>
      <ContextState
         contextName = "ReportComposer.exportHTMLContentToPDF(HTMLContent : String) -&gt; ():ReportComposer.swift">
         <PersistentStrings>
            <PersistentString
               value = "printPageRenderer.numberOfPages">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChartViewController.(setChart(dataPoints : [Int], values : [Double]) -&gt; ()).(closure #1):ChartViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "distanceData">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LocationManager.locationManager(CLLocationManager, didUpdateLocations : [CLLocation]) -&gt; ():LocationManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "lastLocation">
            </PersistentString>
            <PersistentString
               value = "location.horizontalAccuracy">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AppDelegate.application(UIApplication, didReceiveRemoteNotification : [AnyHashable : Any], fetchCompletionHandler : (UIBackgroundFetchResult) -&gt; ()) -&gt; ():AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "aps[&quot;content-available&quot;] as! Int">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.tableView(UITableView, editActionsForRowAt : IndexPath) -&gt; [UITableViewRowAction]?:ProfileViewController.swift">
      </ContextState>
      <ContextState
         contextName = "TripsListViewController.(viewDidLoad() -&gt; ()).(closure #1):TripsListViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "(objects[0] as! Trip).beacon">
            </PersistentString>
            <PersistentString
               value = "error?.localizedDescription">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LoginViewController.(goToApp() -&gt; ()).(closure #1).(closure #1):LoginViewController.swift">
      </ContextState>
      <ContextState
         contextName = "SavedScansController.(presentedDateUpdated(CVDate) -&gt; ()).(closure #1):CalendarViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "Calendar.current.component(.weekdayOrdinal, from: trip.startTime)">
            </PersistentString>
            <PersistentString
               value = "trip.startTime">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TripTableViewCell.(prepareCell(trip : Trip) -&gt; ()).(closure #1).(closure #1):TripTableViewCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "pm.addressDictionary">
            </PersistentString>
            <PersistentString
               value = "pm.addressDictionary[&quot;Street&quot;] as! String">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LoginViewController.(goToApp() -&gt; ()).(closure #1).(closure #1).(closure #1):LoginViewController.swift">
      </ContextState>
      <ContextState
         contextName = "LocationViewController.(showLocations(Any) -&gt; ()).(closure #1).(closure #1):LocationViewController.swift">
      </ContextState>
      <ContextState
         contextName = "SavedScansController.presentedDateUpdated(CVDate) -&gt; ():CalendarViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "calendarView.contentController.presentedMonthView.weekViews">
            </PersistentString>
            <PersistentString
               value = "date.globalDescription.uppercased()">
            </PersistentString>
            <PersistentString
               value = "date.convertedDate()">
            </PersistentString>
            <PersistentString
               value = "calendarView.manager.weeksWithWeekdaysForMonthDate(date.convertedDate()!)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EditOrAddBeaconViewController.viewDidLoad() -&gt; ():EditOrAddBeaconViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "saveButton.currentTitle">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LocationViewController.(viewDidLoad() -&gt; ()).(closure #1):LocationViewController.swift">
      </ContextState>
      <ContextState
         contextName = "AppDelegate.userNotificationCenter(UNUserNotificationCenter, willPresent : UNNotification, withCompletionHandler : (UNNotificationPresentationOptions) -&gt; ()) -&gt; ():AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "notification.request.content.userInfo">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LoginViewController.(fbLoginAction(Any) -&gt; ()).(closure #1).(closure #1):LoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "result as! Dictionary&lt;String, AnyObject&gt;">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static LocationManager.(setupBeacon() -&gt; ()).(closure #1):LocationManager.swift">
      </ContextState>
      <ContextState
         contextName = "TripTableViewCell.prepareCell(trip : Trip) -&gt; ():TripTableViewCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "annotations">
            </PersistentString>
            <PersistentString
               value = "trip.endTime">
            </PersistentString>
            <PersistentString
               value = "mapView.annotations">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LocationManager.(locationManager(CLLocationManager, didUpdateLocations : [CLLocation]) -&gt; ()).(closure #1):LocationManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "error?.localizedDescription">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LoginViewController.(fbLoginAction(Any) -&gt; ()).(closure #1):LoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "FBSDKAccessToken.current()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LocationManager.locationManager(CLLocationManager, didEnterRegion : CLRegion) -&gt; ():LocationManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "region">
            </PersistentString>
            <PersistentString
               value = "(region as! CLBeaconRegion)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SignUpViewController.(signUp(Any) -&gt; ()).(closure #1).(closure #1).(closure #1):SignUpViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AppDelegate.configureRootViewController() -&gt; ():AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "PFUser.current()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static Trip.queryForMonth(date : Date) -&gt; PFQuery&lt;Trip&gt;?:Trip.swift">
         <PersistentStrings>
            <PersistentString
               value = "date.endOfMonth()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SavedScansController.didSelectDayView(CVCalendarDayView, animationDidFinish : Bool) -&gt; ():CalendarViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "dayView.dayLabel.textColor == MyColors.mainColor">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ReportComposer.renderReport(car : String, driver : String, date : String, items : [Trip]) -&gt; String!:ReportComposer.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.endPlace">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CarTableViewCell.(prepareCell(car : Beacon) -&gt; ()).(closure #1):CarTableViewCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "dates">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TripsListViewController.(viewDidLoad() -&gt; ()).(closure #2):TripsListViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "error.localizedDescription">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LoginViewController.viewDidLoad() -&gt; ():LoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "PFUser.current().email">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SignUpViewController.(signUp(Any) -&gt; ()).(closure #1):SignUpViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "                        (error as! NSError).code&#10;">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SavedScansController.(reloadTrips(date : Date) -&gt; ()).(closure #1):CalendarViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "cvDate.weekDay()!.rawValue">
            </PersistentString>
            <PersistentString
               value = "trip.startTime">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LocationViewController.(showLocations(Any) -&gt; ()).(closure #1):LocationViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "error.localizedDescription">
            </PersistentString>
            <PersistentString
               value = "object as! Trip">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
